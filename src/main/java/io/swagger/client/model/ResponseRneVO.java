/*
 * API Konivin
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Colombia -  16082024 - Registro números excluidos.
 */
@Schema(description = "Colombia -  16082024 - Registro números excluidos.")
@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-07-01T20:01:52.954733595Z[GMT]")

public class ResponseRneVO {
  @SerializedName("tipoLlave")
  private String tipoLlave = null;

  @SerializedName("llave")
  private String llave = null;

  /**
   * Indica si la llave (ej. número telefónico) permite SMS.
   */
  @JsonAdapter(SmsEnum.Adapter.class)
  public enum SmsEnum {
    @SerializedName("SI")
    SI("SI"),
    @SerializedName("NO")
    NO("NO");

    private String value;

    SmsEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static SmsEnum fromValue(String input) {
      for (SmsEnum b : SmsEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<SmsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final SmsEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public SmsEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return SmsEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("sms")
  private SmsEnum sms = null;

  /**
   * Indica si la llave (ej. número telefónico) está asociada a una aplicación de mensajería/llamadas.
   */
  @JsonAdapter(AplicacionEnum.Adapter.class)
  public enum AplicacionEnum {
    @SerializedName("SI")
    SI("SI"),
    @SerializedName("NO")
    NO("NO");

    private String value;

    AplicacionEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static AplicacionEnum fromValue(String input) {
      for (AplicacionEnum b : AplicacionEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<AplicacionEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AplicacionEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public AplicacionEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return AplicacionEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("aplicacion")
  private AplicacionEnum aplicacion = null;

  /**
   * Indica si la llave (ej. número telefónico) permite llamadas.
   */
  @JsonAdapter(LlamadaEnum.Adapter.class)
  public enum LlamadaEnum {
    @SerializedName("SI")
    SI("SI"),
    @SerializedName("NO")
    NO("NO");

    private String value;

    LlamadaEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static LlamadaEnum fromValue(String input) {
      for (LlamadaEnum b : LlamadaEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<LlamadaEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LlamadaEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public LlamadaEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return LlamadaEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("llamada")
  private LlamadaEnum llamada = null;

  @SerializedName("tipoNumero")
  private String tipoNumero = null;

  @SerializedName("correo")
  private String correo = null;

  @SerializedName("fechaCreacion")
  private String fechaCreacion = null;

  @SerializedName("estado")
  private String estado = null;

  @SerializedName("fechaConsulta")
  private String fechaConsulta = null;

  /**
   * Indica si la fuente falló en la consulta.
   */
  @JsonAdapter(FuenteFalloEnum.Adapter.class)
  public enum FuenteFalloEnum {
    @SerializedName("SI")
    SI("SI"),
    @SerializedName("NO")
    NO("NO");

    private String value;

    FuenteFalloEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static FuenteFalloEnum fromValue(String input) {
      for (FuenteFalloEnum b : FuenteFalloEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<FuenteFalloEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FuenteFalloEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public FuenteFalloEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return FuenteFalloEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("fuenteFallo")
  private FuenteFalloEnum fuenteFallo = null;

  public ResponseRneVO tipoLlave(String tipoLlave) {
    this.tipoLlave = tipoLlave;
    return this;
  }

   /**
   * Tipo de llave o identificador consultado
   * @return tipoLlave
  **/
  @Schema(example = "TEL, CC, NIT", required = true, description = "Tipo de llave o identificador consultado")
  public String getTipoLlave() {
    return tipoLlave;
  }

  public void setTipoLlave(String tipoLlave) {
    this.tipoLlave = tipoLlave;
  }

  public ResponseRneVO llave(String llave) {
    this.llave = llave;
    return this;
  }

   /**
   * El valor de la llave o identificador consultado.
   * @return llave
  **/
  @Schema(example = "ND1098XX", required = true, description = "El valor de la llave o identificador consultado.")
  public String getLlave() {
    return llave;
  }

  public void setLlave(String llave) {
    this.llave = llave;
  }

  public ResponseRneVO sms(SmsEnum sms) {
    this.sms = sms;
    return this;
  }

   /**
   * Indica si la llave (ej. número telefónico) permite SMS.
   * @return sms
  **/
  @Schema(example = "NO", required = true, description = "Indica si la llave (ej. número telefónico) permite SMS.")
  public SmsEnum getSms() {
    return sms;
  }

  public void setSms(SmsEnum sms) {
    this.sms = sms;
  }

  public ResponseRneVO aplicacion(AplicacionEnum aplicacion) {
    this.aplicacion = aplicacion;
    return this;
  }

   /**
   * Indica si la llave (ej. número telefónico) está asociada a una aplicación de mensajería/llamadas.
   * @return aplicacion
  **/
  @Schema(example = "NO", required = true, description = "Indica si la llave (ej. número telefónico) está asociada a una aplicación de mensajería/llamadas.")
  public AplicacionEnum getAplicacion() {
    return aplicacion;
  }

  public void setAplicacion(AplicacionEnum aplicacion) {
    this.aplicacion = aplicacion;
  }

  public ResponseRneVO llamada(LlamadaEnum llamada) {
    this.llamada = llamada;
    return this;
  }

   /**
   * Indica si la llave (ej. número telefónico) permite llamadas.
   * @return llamada
  **/
  @Schema(example = "NO", required = true, description = "Indica si la llave (ej. número telefónico) permite llamadas.")
  public LlamadaEnum getLlamada() {
    return llamada;
  }

  public void setLlamada(LlamadaEnum llamada) {
    this.llamada = llamada;
  }

  public ResponseRneVO tipoNumero(String tipoNumero) {
    this.tipoNumero = tipoNumero;
    return this;
  }

   /**
   * Tipo de número de teléfono
   * @return tipoNumero
  **/
  @Schema(example = "Móvil, Fijo", required = true, description = "Tipo de número de teléfono")
  public String getTipoNumero() {
    return tipoNumero;
  }

  public void setTipoNumero(String tipoNumero) {
    this.tipoNumero = tipoNumero;
  }

  public ResponseRneVO correo(String correo) {
    this.correo = correo;
    return this;
  }

   /**
   * Dirección de correo electrónico asociada.
   * @return correo
  **/
  @Schema(required = true, description = "Dirección de correo electrónico asociada.")
  public String getCorreo() {
    return correo;
  }

  public void setCorreo(String correo) {
    this.correo = correo;
  }

  public ResponseRneVO fechaCreacion(String fechaCreacion) {
    this.fechaCreacion = fechaCreacion;
    return this;
  }

   /**
   * Get fechaCreacion
   * @return fechaCreacion
  **/
  @Schema(required = true, description = "")
  public String getFechaCreacion() {
    return fechaCreacion;
  }

  public void setFechaCreacion(String fechaCreacion) {
    this.fechaCreacion = fechaCreacion;
  }

  public ResponseRneVO estado(String estado) {
    this.estado = estado;
    return this;
  }

   /**
   * Estado general del registro.
   * @return estado
  **/
  @Schema(required = true, description = "Estado general del registro.")
  public String getEstado() {
    return estado;
  }

  public void setEstado(String estado) {
    this.estado = estado;
  }

  public ResponseRneVO fechaConsulta(String fechaConsulta) {
    this.fechaConsulta = fechaConsulta;
    return this;
  }

   /**
   * Get fechaConsulta
   * @return fechaConsulta
  **/
  @Schema(required = true, description = "")
  public String getFechaConsulta() {
    return fechaConsulta;
  }

  public void setFechaConsulta(String fechaConsulta) {
    this.fechaConsulta = fechaConsulta;
  }

  public ResponseRneVO fuenteFallo(FuenteFalloEnum fuenteFallo) {
    this.fuenteFallo = fuenteFallo;
    return this;
  }

   /**
   * Indica si la fuente falló en la consulta.
   * @return fuenteFallo
  **/
  @Schema(example = "NO", required = true, description = "Indica si la fuente falló en la consulta.")
  public FuenteFalloEnum getFuenteFallo() {
    return fuenteFallo;
  }

  public void setFuenteFallo(FuenteFalloEnum fuenteFallo) {
    this.fuenteFallo = fuenteFallo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseRneVO responseRneVO = (ResponseRneVO) o;
    return Objects.equals(this.tipoLlave, responseRneVO.tipoLlave) &&
        Objects.equals(this.llave, responseRneVO.llave) &&
        Objects.equals(this.sms, responseRneVO.sms) &&
        Objects.equals(this.aplicacion, responseRneVO.aplicacion) &&
        Objects.equals(this.llamada, responseRneVO.llamada) &&
        Objects.equals(this.tipoNumero, responseRneVO.tipoNumero) &&
        Objects.equals(this.correo, responseRneVO.correo) &&
        Objects.equals(this.fechaCreacion, responseRneVO.fechaCreacion) &&
        Objects.equals(this.estado, responseRneVO.estado) &&
        Objects.equals(this.fechaConsulta, responseRneVO.fechaConsulta) &&
        Objects.equals(this.fuenteFallo, responseRneVO.fuenteFallo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tipoLlave, llave, sms, aplicacion, llamada, tipoNumero, correo, fechaCreacion, estado, fechaConsulta, fuenteFallo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseRneVO {\n");
    
    sb.append("    tipoLlave: ").append(toIndentedString(tipoLlave)).append("\n");
    sb.append("    llave: ").append(toIndentedString(llave)).append("\n");
    sb.append("    sms: ").append(toIndentedString(sms)).append("\n");
    sb.append("    aplicacion: ").append(toIndentedString(aplicacion)).append("\n");
    sb.append("    llamada: ").append(toIndentedString(llamada)).append("\n");
    sb.append("    tipoNumero: ").append(toIndentedString(tipoNumero)).append("\n");
    sb.append("    correo: ").append(toIndentedString(correo)).append("\n");
    sb.append("    fechaCreacion: ").append(toIndentedString(fechaCreacion)).append("\n");
    sb.append("    estado: ").append(toIndentedString(estado)).append("\n");
    sb.append("    fechaConsulta: ").append(toIndentedString(fechaConsulta)).append("\n");
    sb.append("    fuenteFallo: ").append(toIndentedString(fuenteFallo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
