/*
 * API Konivin
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * ResponseRuntPlacaVOListCertificadoTecnicoMecanicoGases
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-07-01T20:01:52.954733595Z[GMT]")

public class ResponseRuntPlacaVOListCertificadoTecnicoMecanicoGases {
  @SerializedName("tipoRevision")
  private String tipoRevision = null;

  @SerializedName("fechaExpedicion")
  private String fechaExpedicion = null;

  @SerializedName("fechaVigencia")
  private String fechaVigencia = null;

  @SerializedName("cdaExpide")
  private String cdaExpide = null;

  /**
   * Indica si el certificado está vigente.
   */
  @JsonAdapter(VigenteEnum.Adapter.class)
  public enum VigenteEnum {
    @SerializedName("SI")
    SI("SI"),
    @SerializedName("NO")
    NO("NO");

    private String value;

    VigenteEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static VigenteEnum fromValue(String input) {
      for (VigenteEnum b : VigenteEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<VigenteEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VigenteEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public VigenteEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return VigenteEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("vigente")
  private VigenteEnum vigente = null;

  @SerializedName("nroCertificado")
  private String nroCertificado = null;

  public ResponseRuntPlacaVOListCertificadoTecnicoMecanicoGases tipoRevision(String tipoRevision) {
    this.tipoRevision = tipoRevision;
    return this;
  }

   /**
   * Tipo de revisión
   * @return tipoRevision
  **/
  @Schema(example = "REVISION TECNICO-MECANICO", required = true, description = "Tipo de revisión")
  public String getTipoRevision() {
    return tipoRevision;
  }

  public void setTipoRevision(String tipoRevision) {
    this.tipoRevision = tipoRevision;
  }

  public ResponseRuntPlacaVOListCertificadoTecnicoMecanicoGases fechaExpedicion(String fechaExpedicion) {
    this.fechaExpedicion = fechaExpedicion;
    return this;
  }

   /**
   * Get fechaExpedicion
   * @return fechaExpedicion
  **/
  @Schema(required = true, description = "")
  public String getFechaExpedicion() {
    return fechaExpedicion;
  }

  public void setFechaExpedicion(String fechaExpedicion) {
    this.fechaExpedicion = fechaExpedicion;
  }

  public ResponseRuntPlacaVOListCertificadoTecnicoMecanicoGases fechaVigencia(String fechaVigencia) {
    this.fechaVigencia = fechaVigencia;
    return this;
  }

   /**
   * Get fechaVigencia
   * @return fechaVigencia
  **/
  @Schema(required = true, description = "")
  public String getFechaVigencia() {
    return fechaVigencia;
  }

  public void setFechaVigencia(String fechaVigencia) {
    this.fechaVigencia = fechaVigencia;
  }

  public ResponseRuntPlacaVOListCertificadoTecnicoMecanicoGases cdaExpide(String cdaExpide) {
    this.cdaExpide = cdaExpide;
    return this;
  }

   /**
   * Centro de Diagnóstico Automotor (CDA) que expide el certificado.
   * @return cdaExpide
  **/
  @Schema(example = "DIAGNOSTICENTROS DE COLOMBIA S.A.S.", required = true, description = "Centro de Diagnóstico Automotor (CDA) que expide el certificado.")
  public String getCdaExpide() {
    return cdaExpide;
  }

  public void setCdaExpide(String cdaExpide) {
    this.cdaExpide = cdaExpide;
  }

  public ResponseRuntPlacaVOListCertificadoTecnicoMecanicoGases vigente(VigenteEnum vigente) {
    this.vigente = vigente;
    return this;
  }

   /**
   * Indica si el certificado está vigente.
   * @return vigente
  **/
  @Schema(example = "SI", required = true, description = "Indica si el certificado está vigente.")
  public VigenteEnum getVigente() {
    return vigente;
  }

  public void setVigente(VigenteEnum vigente) {
    this.vigente = vigente;
  }

  public ResponseRuntPlacaVOListCertificadoTecnicoMecanicoGases nroCertificado(String nroCertificado) {
    this.nroCertificado = nroCertificado;
    return this;
  }

   /**
   * Número del certificado de revisión técnico-mecánica.
   * @return nroCertificado
  **/
  @Schema(example = "146813070", required = true, description = "Número del certificado de revisión técnico-mecánica.")
  public String getNroCertificado() {
    return nroCertificado;
  }

  public void setNroCertificado(String nroCertificado) {
    this.nroCertificado = nroCertificado;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseRuntPlacaVOListCertificadoTecnicoMecanicoGases responseRuntPlacaVOListCertificadoTecnicoMecanicoGases = (ResponseRuntPlacaVOListCertificadoTecnicoMecanicoGases) o;
    return Objects.equals(this.tipoRevision, responseRuntPlacaVOListCertificadoTecnicoMecanicoGases.tipoRevision) &&
        Objects.equals(this.fechaExpedicion, responseRuntPlacaVOListCertificadoTecnicoMecanicoGases.fechaExpedicion) &&
        Objects.equals(this.fechaVigencia, responseRuntPlacaVOListCertificadoTecnicoMecanicoGases.fechaVigencia) &&
        Objects.equals(this.cdaExpide, responseRuntPlacaVOListCertificadoTecnicoMecanicoGases.cdaExpide) &&
        Objects.equals(this.vigente, responseRuntPlacaVOListCertificadoTecnicoMecanicoGases.vigente) &&
        Objects.equals(this.nroCertificado, responseRuntPlacaVOListCertificadoTecnicoMecanicoGases.nroCertificado);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tipoRevision, fechaExpedicion, fechaVigencia, cdaExpide, vigente, nroCertificado);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseRuntPlacaVOListCertificadoTecnicoMecanicoGases {\n");
    
    sb.append("    tipoRevision: ").append(toIndentedString(tipoRevision)).append("\n");
    sb.append("    fechaExpedicion: ").append(toIndentedString(fechaExpedicion)).append("\n");
    sb.append("    fechaVigencia: ").append(toIndentedString(fechaVigencia)).append("\n");
    sb.append("    cdaExpide: ").append(toIndentedString(cdaExpide)).append("\n");
    sb.append("    vigente: ").append(toIndentedString(vigente)).append("\n");
    sb.append("    nroCertificado: ").append(toIndentedString(nroCertificado)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
