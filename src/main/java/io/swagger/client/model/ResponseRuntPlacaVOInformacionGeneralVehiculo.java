/*
 * API Konivin
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Información general y técnica del vehículo.
 */
@Schema(description = "Información general y técnica del vehículo.")
@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-07-01T20:01:52.954733595Z[GMT]")

public class ResponseRuntPlacaVOInformacionGeneralVehiculo {
  @SerializedName("marca")
  private String marca = null;

  @SerializedName("linea")
  private String linea = null;

  @SerializedName("modelo")
  private String modelo = null;

  @SerializedName("color")
  private String color = null;

  @SerializedName("nroSerie")
  private String nroSerie = null;

  @SerializedName("nroMotor")
  private String nroMotor = null;

  @SerializedName("nroChasis")
  private String nroChasis = null;

  @SerializedName("nroVin")
  private String nroVin = null;

  @SerializedName("cilindraje")
  private String cilindraje = null;

  @SerializedName("tipoCarroceria")
  private String tipoCarroceria = null;

  @SerializedName("tipoCombustible")
  private String tipoCombustible = null;

  @SerializedName("fechaMatriculaInicial")
  private String fechaMatriculaInicial = null;

  @SerializedName("autoridadTransito")
  private String autoridadTransito = null;

  /**
   * Indica si el vehículo tiene gravámenes a la propiedad.
   */
  @JsonAdapter(GravamenesPropiedadEnum.Adapter.class)
  public enum GravamenesPropiedadEnum {
    @SerializedName("SI")
    SI("SI"),
    @SerializedName("NO")
    NO("NO");

    private String value;

    GravamenesPropiedadEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static GravamenesPropiedadEnum fromValue(String input) {
      for (GravamenesPropiedadEnum b : GravamenesPropiedadEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<GravamenesPropiedadEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GravamenesPropiedadEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public GravamenesPropiedadEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return GravamenesPropiedadEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("gravamenesPropiedad")
  private GravamenesPropiedadEnum gravamenesPropiedad = null;

  /**
   * Indica si el vehículo es clasificado como clásico o antiguo.
   */
  @JsonAdapter(ClasicoAntiguoEnum.Adapter.class)
  public enum ClasicoAntiguoEnum {
    @SerializedName("SI")
    SI("SI"),
    @SerializedName("NO")
    NO("NO");

    private String value;

    ClasicoAntiguoEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static ClasicoAntiguoEnum fromValue(String input) {
      for (ClasicoAntiguoEnum b : ClasicoAntiguoEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<ClasicoAntiguoEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ClasicoAntiguoEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public ClasicoAntiguoEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return ClasicoAntiguoEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("clasicoAntiguo")
  private ClasicoAntiguoEnum clasicoAntiguo = null;

  /**
   * Indica si el vehículo ha sido repotenciado.
   */
  @JsonAdapter(RepotenciadoEnum.Adapter.class)
  public enum RepotenciadoEnum {
    @SerializedName("SI")
    SI("SI"),
    @SerializedName("NO")
    NO("NO");

    private String value;

    RepotenciadoEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RepotenciadoEnum fromValue(String input) {
      for (RepotenciadoEnum b : RepotenciadoEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RepotenciadoEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RepotenciadoEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public RepotenciadoEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return RepotenciadoEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("repotenciado")
  private RepotenciadoEnum repotenciado = null;

  /**
   * Indica si el motor ha sido regrabado.
   */
  @JsonAdapter(RegrabacionMotorEnum.Adapter.class)
  public enum RegrabacionMotorEnum {
    @SerializedName("SI")
    SI("SI"),
    @SerializedName("NO")
    NO("NO");

    private String value;

    RegrabacionMotorEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RegrabacionMotorEnum fromValue(String input) {
      for (RegrabacionMotorEnum b : RegrabacionMotorEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RegrabacionMotorEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RegrabacionMotorEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public RegrabacionMotorEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return RegrabacionMotorEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("regrabacionMotor")
  private RegrabacionMotorEnum regrabacionMotor = null;

  @SerializedName("nroRegrabacionMotor")
  private String nroRegrabacionMotor = null;

  /**
   * Indica si el chasis ha sido regrabado.
   */
  @JsonAdapter(RegrabacionChasisEnum.Adapter.class)
  public enum RegrabacionChasisEnum {
    @SerializedName("SI")
    SI("SI"),
    @SerializedName("NO")
    NO("NO");

    private String value;

    RegrabacionChasisEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RegrabacionChasisEnum fromValue(String input) {
      for (RegrabacionChasisEnum b : RegrabacionChasisEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RegrabacionChasisEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RegrabacionChasisEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public RegrabacionChasisEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return RegrabacionChasisEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("regrabacionChasis")
  private RegrabacionChasisEnum regrabacionChasis = null;

  /**
   * Indica si la serie ha sido regrabada.
   */
  @JsonAdapter(RegrabacionSerieEnum.Adapter.class)
  public enum RegrabacionSerieEnum {
    @SerializedName("SI")
    SI("SI"),
    @SerializedName("NO")
    NO("NO");

    private String value;

    RegrabacionSerieEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RegrabacionSerieEnum fromValue(String input) {
      for (RegrabacionSerieEnum b : RegrabacionSerieEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RegrabacionSerieEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RegrabacionSerieEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public RegrabacionSerieEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return RegrabacionSerieEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("regrabacionSerie")
  private RegrabacionSerieEnum regrabacionSerie = null;

  /**
   * Indica si el VIN ha sido regrabado.
   */
  @JsonAdapter(RegrabacionVinEnum.Adapter.class)
  public enum RegrabacionVinEnum {
    @SerializedName("SI")
    SI("SI"),
    @SerializedName("NO")
    NO("NO");

    private String value;

    RegrabacionVinEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static RegrabacionVinEnum fromValue(String input) {
      for (RegrabacionVinEnum b : RegrabacionVinEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<RegrabacionVinEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RegrabacionVinEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public RegrabacionVinEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return RegrabacionVinEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("regrabacionVin")
  private RegrabacionVinEnum regrabacionVin = null;

  @SerializedName("puertas")
  private String puertas = null;

  public ResponseRuntPlacaVOInformacionGeneralVehiculo marca(String marca) {
    this.marca = marca;
    return this;
  }

   /**
   * Marca del vehículo.
   * @return marca
  **/
  @Schema(example = "BAJAJ", required = true, description = "Marca del vehículo.")
  public String getMarca() {
    return marca;
  }

  public void setMarca(String marca) {
    this.marca = marca;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo linea(String linea) {
    this.linea = linea;
    return this;
  }

   /**
   * Línea del vehículo.
   * @return linea
  **/
  @Schema(example = "DISCOVER 125 ST", required = true, description = "Línea del vehículo.")
  public String getLinea() {
    return linea;
  }

  public void setLinea(String linea) {
    this.linea = linea;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo modelo(String modelo) {
    this.modelo = modelo;
    return this;
  }

   /**
   * Año del modelo del vehículo.
   * @return modelo
  **/
  @Schema(example = "2014", required = true, description = "Año del modelo del vehículo.")
  public String getModelo() {
    return modelo;
  }

  public void setModelo(String modelo) {
    this.modelo = modelo;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo color(String color) {
    this.color = color;
    return this;
  }

   /**
   * Color del vehículo.
   * @return color
  **/
  @Schema(example = "NEGRO NEBULOSA", required = true, description = "Color del vehículo.")
  public String getColor() {
    return color;
  }

  public void setColor(String color) {
    this.color = color;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo nroSerie(String nroSerie) {
    this.nroSerie = nroSerie;
    return this;
  }

   /**
   * Número de serie del vehículo.
   * @return nroSerie
  **/
  @Schema(example = "112dfdsdf2", required = true, description = "Número de serie del vehículo.")
  public String getNroSerie() {
    return nroSerie;
  }

  public void setNroSerie(String nroSerie) {
    this.nroSerie = nroSerie;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo nroMotor(String nroMotor) {
    this.nroMotor = nroMotor;
    return this;
  }

   /**
   * Número de motor del vehículo.
   * @return nroMotor
  **/
  @Schema(example = "SFGSDF3455", required = true, description = "Número de motor del vehículo.")
  public String getNroMotor() {
    return nroMotor;
  }

  public void setNroMotor(String nroMotor) {
    this.nroMotor = nroMotor;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo nroChasis(String nroChasis) {
    this.nroChasis = nroChasis;
    return this;
  }

   /**
   * Número de chasis del vehículo.
   * @return nroChasis
  **/
  @Schema(example = "GSDFGFDW34GW45", required = true, description = "Número de chasis del vehículo.")
  public String getNroChasis() {
    return nroChasis;
  }

  public void setNroChasis(String nroChasis) {
    this.nroChasis = nroChasis;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo nroVin(String nroVin) {
    this.nroVin = nroVin;
    return this;
  }

   /**
   * Número de identificación vehicular (VIN).
   * @return nroVin
  **/
  @Schema(example = "FSGSW45G54", required = true, description = "Número de identificación vehicular (VIN).")
  public String getNroVin() {
    return nroVin;
  }

  public void setNroVin(String nroVin) {
    this.nroVin = nroVin;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo cilindraje(String cilindraje) {
    this.cilindraje = cilindraje;
    return this;
  }

   /**
   * Cilindraje del motor del vehículo.
   * @return cilindraje
  **/
  @Schema(example = "124", required = true, description = "Cilindraje del motor del vehículo.")
  public String getCilindraje() {
    return cilindraje;
  }

  public void setCilindraje(String cilindraje) {
    this.cilindraje = cilindraje;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo tipoCarroceria(String tipoCarroceria) {
    this.tipoCarroceria = tipoCarroceria;
    return this;
  }

   /**
   * Tipo de carrocería del vehículo.
   * @return tipoCarroceria
  **/
  @Schema(example = "SIN CARROCERIA", required = true, description = "Tipo de carrocería del vehículo.")
  public String getTipoCarroceria() {
    return tipoCarroceria;
  }

  public void setTipoCarroceria(String tipoCarroceria) {
    this.tipoCarroceria = tipoCarroceria;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo tipoCombustible(String tipoCombustible) {
    this.tipoCombustible = tipoCombustible;
    return this;
  }

   /**
   * Tipo de combustible que utiliza el vehículo.
   * @return tipoCombustible
  **/
  @Schema(example = "GASOLINA", required = true, description = "Tipo de combustible que utiliza el vehículo.")
  public String getTipoCombustible() {
    return tipoCombustible;
  }

  public void setTipoCombustible(String tipoCombustible) {
    this.tipoCombustible = tipoCombustible;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo fechaMatriculaInicial(String fechaMatriculaInicial) {
    this.fechaMatriculaInicial = fechaMatriculaInicial;
    return this;
  }

   /**
   * Get fechaMatriculaInicial
   * @return fechaMatriculaInicial
  **/
  @Schema(required = true, description = "")
  public String getFechaMatriculaInicial() {
    return fechaMatriculaInicial;
  }

  public void setFechaMatriculaInicial(String fechaMatriculaInicial) {
    this.fechaMatriculaInicial = fechaMatriculaInicial;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo autoridadTransito(String autoridadTransito) {
    this.autoridadTransito = autoridadTransito;
    return this;
  }

   /**
   * Autoridad de Tránsito donde fue matriculado.
   * @return autoridadTransito
  **/
  @Schema(example = "STRIA MCPAL TTOyTTE GIRON", required = true, description = "Autoridad de Tránsito donde fue matriculado.")
  public String getAutoridadTransito() {
    return autoridadTransito;
  }

  public void setAutoridadTransito(String autoridadTransito) {
    this.autoridadTransito = autoridadTransito;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo gravamenesPropiedad(GravamenesPropiedadEnum gravamenesPropiedad) {
    this.gravamenesPropiedad = gravamenesPropiedad;
    return this;
  }

   /**
   * Indica si el vehículo tiene gravámenes a la propiedad.
   * @return gravamenesPropiedad
  **/
  @Schema(example = "NO", required = true, description = "Indica si el vehículo tiene gravámenes a la propiedad.")
  public GravamenesPropiedadEnum getGravamenesPropiedad() {
    return gravamenesPropiedad;
  }

  public void setGravamenesPropiedad(GravamenesPropiedadEnum gravamenesPropiedad) {
    this.gravamenesPropiedad = gravamenesPropiedad;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo clasicoAntiguo(ClasicoAntiguoEnum clasicoAntiguo) {
    this.clasicoAntiguo = clasicoAntiguo;
    return this;
  }

   /**
   * Indica si el vehículo es clasificado como clásico o antiguo.
   * @return clasicoAntiguo
  **/
  @Schema(example = "NO", required = true, description = "Indica si el vehículo es clasificado como clásico o antiguo.")
  public ClasicoAntiguoEnum getClasicoAntiguo() {
    return clasicoAntiguo;
  }

  public void setClasicoAntiguo(ClasicoAntiguoEnum clasicoAntiguo) {
    this.clasicoAntiguo = clasicoAntiguo;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo repotenciado(RepotenciadoEnum repotenciado) {
    this.repotenciado = repotenciado;
    return this;
  }

   /**
   * Indica si el vehículo ha sido repotenciado.
   * @return repotenciado
  **/
  @Schema(example = "NO", required = true, description = "Indica si el vehículo ha sido repotenciado.")
  public RepotenciadoEnum getRepotenciado() {
    return repotenciado;
  }

  public void setRepotenciado(RepotenciadoEnum repotenciado) {
    this.repotenciado = repotenciado;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo regrabacionMotor(RegrabacionMotorEnum regrabacionMotor) {
    this.regrabacionMotor = regrabacionMotor;
    return this;
  }

   /**
   * Indica si el motor ha sido regrabado.
   * @return regrabacionMotor
  **/
  @Schema(example = "NO", required = true, description = "Indica si el motor ha sido regrabado.")
  public RegrabacionMotorEnum getRegrabacionMotor() {
    return regrabacionMotor;
  }

  public void setRegrabacionMotor(RegrabacionMotorEnum regrabacionMotor) {
    this.regrabacionMotor = regrabacionMotor;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo nroRegrabacionMotor(String nroRegrabacionMotor) {
    this.nroRegrabacionMotor = nroRegrabacionMotor;
    return this;
  }

   /**
   * Número de regrabación del motor, si aplica.
   * @return nroRegrabacionMotor
  **/
  @Schema(required = true, description = "Número de regrabación del motor, si aplica.")
  public String getNroRegrabacionMotor() {
    return nroRegrabacionMotor;
  }

  public void setNroRegrabacionMotor(String nroRegrabacionMotor) {
    this.nroRegrabacionMotor = nroRegrabacionMotor;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo regrabacionChasis(RegrabacionChasisEnum regrabacionChasis) {
    this.regrabacionChasis = regrabacionChasis;
    return this;
  }

   /**
   * Indica si el chasis ha sido regrabado.
   * @return regrabacionChasis
  **/
  @Schema(example = "NO", required = true, description = "Indica si el chasis ha sido regrabado.")
  public RegrabacionChasisEnum getRegrabacionChasis() {
    return regrabacionChasis;
  }

  public void setRegrabacionChasis(RegrabacionChasisEnum regrabacionChasis) {
    this.regrabacionChasis = regrabacionChasis;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo regrabacionSerie(RegrabacionSerieEnum regrabacionSerie) {
    this.regrabacionSerie = regrabacionSerie;
    return this;
  }

   /**
   * Indica si la serie ha sido regrabada.
   * @return regrabacionSerie
  **/
  @Schema(example = "NO", required = true, description = "Indica si la serie ha sido regrabada.")
  public RegrabacionSerieEnum getRegrabacionSerie() {
    return regrabacionSerie;
  }

  public void setRegrabacionSerie(RegrabacionSerieEnum regrabacionSerie) {
    this.regrabacionSerie = regrabacionSerie;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo regrabacionVin(RegrabacionVinEnum regrabacionVin) {
    this.regrabacionVin = regrabacionVin;
    return this;
  }

   /**
   * Indica si el VIN ha sido regrabado.
   * @return regrabacionVin
  **/
  @Schema(example = "NO", required = true, description = "Indica si el VIN ha sido regrabado.")
  public RegrabacionVinEnum getRegrabacionVin() {
    return regrabacionVin;
  }

  public void setRegrabacionVin(RegrabacionVinEnum regrabacionVin) {
    this.regrabacionVin = regrabacionVin;
  }

  public ResponseRuntPlacaVOInformacionGeneralVehiculo puertas(String puertas) {
    this.puertas = puertas;
    return this;
  }

   /**
   * Número de puertas del vehículo.
   * @return puertas
  **/
  @Schema(required = true, description = "Número de puertas del vehículo.")
  public String getPuertas() {
    return puertas;
  }

  public void setPuertas(String puertas) {
    this.puertas = puertas;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseRuntPlacaVOInformacionGeneralVehiculo responseRuntPlacaVOInformacionGeneralVehiculo = (ResponseRuntPlacaVOInformacionGeneralVehiculo) o;
    return Objects.equals(this.marca, responseRuntPlacaVOInformacionGeneralVehiculo.marca) &&
        Objects.equals(this.linea, responseRuntPlacaVOInformacionGeneralVehiculo.linea) &&
        Objects.equals(this.modelo, responseRuntPlacaVOInformacionGeneralVehiculo.modelo) &&
        Objects.equals(this.color, responseRuntPlacaVOInformacionGeneralVehiculo.color) &&
        Objects.equals(this.nroSerie, responseRuntPlacaVOInformacionGeneralVehiculo.nroSerie) &&
        Objects.equals(this.nroMotor, responseRuntPlacaVOInformacionGeneralVehiculo.nroMotor) &&
        Objects.equals(this.nroChasis, responseRuntPlacaVOInformacionGeneralVehiculo.nroChasis) &&
        Objects.equals(this.nroVin, responseRuntPlacaVOInformacionGeneralVehiculo.nroVin) &&
        Objects.equals(this.cilindraje, responseRuntPlacaVOInformacionGeneralVehiculo.cilindraje) &&
        Objects.equals(this.tipoCarroceria, responseRuntPlacaVOInformacionGeneralVehiculo.tipoCarroceria) &&
        Objects.equals(this.tipoCombustible, responseRuntPlacaVOInformacionGeneralVehiculo.tipoCombustible) &&
        Objects.equals(this.fechaMatriculaInicial, responseRuntPlacaVOInformacionGeneralVehiculo.fechaMatriculaInicial) &&
        Objects.equals(this.autoridadTransito, responseRuntPlacaVOInformacionGeneralVehiculo.autoridadTransito) &&
        Objects.equals(this.gravamenesPropiedad, responseRuntPlacaVOInformacionGeneralVehiculo.gravamenesPropiedad) &&
        Objects.equals(this.clasicoAntiguo, responseRuntPlacaVOInformacionGeneralVehiculo.clasicoAntiguo) &&
        Objects.equals(this.repotenciado, responseRuntPlacaVOInformacionGeneralVehiculo.repotenciado) &&
        Objects.equals(this.regrabacionMotor, responseRuntPlacaVOInformacionGeneralVehiculo.regrabacionMotor) &&
        Objects.equals(this.nroRegrabacionMotor, responseRuntPlacaVOInformacionGeneralVehiculo.nroRegrabacionMotor) &&
        Objects.equals(this.regrabacionChasis, responseRuntPlacaVOInformacionGeneralVehiculo.regrabacionChasis) &&
        Objects.equals(this.regrabacionSerie, responseRuntPlacaVOInformacionGeneralVehiculo.regrabacionSerie) &&
        Objects.equals(this.regrabacionVin, responseRuntPlacaVOInformacionGeneralVehiculo.regrabacionVin) &&
        Objects.equals(this.puertas, responseRuntPlacaVOInformacionGeneralVehiculo.puertas);
  }

  @Override
  public int hashCode() {
    return Objects.hash(marca, linea, modelo, color, nroSerie, nroMotor, nroChasis, nroVin, cilindraje, tipoCarroceria, tipoCombustible, fechaMatriculaInicial, autoridadTransito, gravamenesPropiedad, clasicoAntiguo, repotenciado, regrabacionMotor, nroRegrabacionMotor, regrabacionChasis, regrabacionSerie, regrabacionVin, puertas);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseRuntPlacaVOInformacionGeneralVehiculo {\n");
    
    sb.append("    marca: ").append(toIndentedString(marca)).append("\n");
    sb.append("    linea: ").append(toIndentedString(linea)).append("\n");
    sb.append("    modelo: ").append(toIndentedString(modelo)).append("\n");
    sb.append("    color: ").append(toIndentedString(color)).append("\n");
    sb.append("    nroSerie: ").append(toIndentedString(nroSerie)).append("\n");
    sb.append("    nroMotor: ").append(toIndentedString(nroMotor)).append("\n");
    sb.append("    nroChasis: ").append(toIndentedString(nroChasis)).append("\n");
    sb.append("    nroVin: ").append(toIndentedString(nroVin)).append("\n");
    sb.append("    cilindraje: ").append(toIndentedString(cilindraje)).append("\n");
    sb.append("    tipoCarroceria: ").append(toIndentedString(tipoCarroceria)).append("\n");
    sb.append("    tipoCombustible: ").append(toIndentedString(tipoCombustible)).append("\n");
    sb.append("    fechaMatriculaInicial: ").append(toIndentedString(fechaMatriculaInicial)).append("\n");
    sb.append("    autoridadTransito: ").append(toIndentedString(autoridadTransito)).append("\n");
    sb.append("    gravamenesPropiedad: ").append(toIndentedString(gravamenesPropiedad)).append("\n");
    sb.append("    clasicoAntiguo: ").append(toIndentedString(clasicoAntiguo)).append("\n");
    sb.append("    repotenciado: ").append(toIndentedString(repotenciado)).append("\n");
    sb.append("    regrabacionMotor: ").append(toIndentedString(regrabacionMotor)).append("\n");
    sb.append("    nroRegrabacionMotor: ").append(toIndentedString(nroRegrabacionMotor)).append("\n");
    sb.append("    regrabacionChasis: ").append(toIndentedString(regrabacionChasis)).append("\n");
    sb.append("    regrabacionSerie: ").append(toIndentedString(regrabacionSerie)).append("\n");
    sb.append("    regrabacionVin: ").append(toIndentedString(regrabacionVin)).append("\n");
    sb.append("    puertas: ").append(toIndentedString(puertas)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
