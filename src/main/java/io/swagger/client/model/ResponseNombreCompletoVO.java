/*
 * API Konivin
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Colombia -  20036582 - Consulta de nombre completo de persona
 */
@Schema(description = "Colombia -  20036582 - Consulta de nombre completo de persona")
@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-07-01T20:01:52.954733595Z[GMT]")

public class ResponseNombreCompletoVO {
  @SerializedName("nombrePersona")
  private String nombrePersona = null;

  @SerializedName("primerNombre")
  private String primerNombre = null;

  @SerializedName("segundoNombre")
  private String segundoNombre = null;

  @SerializedName("primerApellido")
  private String primerApellido = null;

  @SerializedName("segundoApellido")
  private String segundoApellido = null;

  /**
   * Define la forma en que está almacenado el nombre dentro de los campos primerNombre, segundoNombre, primerApellido, segundoApellido
   */
  @JsonAdapter(TipoNombreEnum.Adapter.class)
  public enum TipoNombreEnum {
    @SerializedName("1")
    NUMBER_1(1),
    @SerializedName("2")
    NUMBER_2(2),
    @SerializedName("3")
    NUMBER_3(3);

    private Integer value;

    TipoNombreEnum(Integer value) {
      this.value = value;
    }
    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TipoNombreEnum fromValue(Integer input) {
      for (TipoNombreEnum b : TipoNombreEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TipoNombreEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TipoNombreEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TipoNombreEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextInt();
        return TipoNombreEnum.fromValue((Integer)(value));
      }
    }
  }  @SerializedName("tipoNombre")
  private TipoNombreEnum tipoNombre = null;

  @SerializedName("mensaje")
  private String mensaje = null;

  @SerializedName("fechaConsulta")
  private String fechaConsulta = null;

  /**
   * Define si la consulta falló o no cuando se fue a la fuente.
   */
  @JsonAdapter(FuenteFalloEnum.Adapter.class)
  public enum FuenteFalloEnum {
    @SerializedName("SI")
    SI("SI"),
    @SerializedName("NO")
    NO("NO");

    private String value;

    FuenteFalloEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static FuenteFalloEnum fromValue(String input) {
      for (FuenteFalloEnum b : FuenteFalloEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<FuenteFalloEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FuenteFalloEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public FuenteFalloEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return FuenteFalloEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("fuenteFallo")
  private FuenteFalloEnum fuenteFallo = null;

  public ResponseNombreCompletoVO nombrePersona(String nombrePersona) {
    this.nombrePersona = nombrePersona;
    return this;
  }

   /**
   * Nombre completo de la persona consultada. Este valor retorna vacío si no se encuentra la persona.
   * @return nombrePersona
  **/
  @Schema(example = "JUAN CARLOS PEREZ LOPEZ", required = true, description = "Nombre completo de la persona consultada. Este valor retorna vacío si no se encuentra la persona.")
  public String getNombrePersona() {
    return nombrePersona;
  }

  public void setNombrePersona(String nombrePersona) {
    this.nombrePersona = nombrePersona;
  }

  public ResponseNombreCompletoVO primerNombre(String primerNombre) {
    this.primerNombre = primerNombre;
    return this;
  }

   /**
   * Primer nombre o nombre completo o nombres y apellidos completos.
   * @return primerNombre
  **/
  @Schema(example = "JUAN", description = "Primer nombre o nombre completo o nombres y apellidos completos.")
  public String getPrimerNombre() {
    return primerNombre;
  }

  public void setPrimerNombre(String primerNombre) {
    this.primerNombre = primerNombre;
  }

  public ResponseNombreCompletoVO segundoNombre(String segundoNombre) {
    this.segundoNombre = segundoNombre;
    return this;
  }

   /**
   * Segundo Nombre.
   * @return segundoNombre
  **/
  @Schema(example = "CARLOS", description = "Segundo Nombre.")
  public String getSegundoNombre() {
    return segundoNombre;
  }

  public void setSegundoNombre(String segundoNombre) {
    this.segundoNombre = segundoNombre;
  }

  public ResponseNombreCompletoVO primerApellido(String primerApellido) {
    this.primerApellido = primerApellido;
    return this;
  }

   /**
   * Primer apellido o apellidos completos.
   * @return primerApellido
  **/
  @Schema(example = "PEREZ", description = "Primer apellido o apellidos completos.")
  public String getPrimerApellido() {
    return primerApellido;
  }

  public void setPrimerApellido(String primerApellido) {
    this.primerApellido = primerApellido;
  }

  public ResponseNombreCompletoVO segundoApellido(String segundoApellido) {
    this.segundoApellido = segundoApellido;
    return this;
  }

   /**
   * Segundo Apellido.
   * @return segundoApellido
  **/
  @Schema(example = "LOPEZ", description = "Segundo Apellido.")
  public String getSegundoApellido() {
    return segundoApellido;
  }

  public void setSegundoApellido(String segundoApellido) {
    this.segundoApellido = segundoApellido;
  }

  public ResponseNombreCompletoVO tipoNombre(TipoNombreEnum tipoNombre) {
    this.tipoNombre = tipoNombre;
    return this;
  }

   /**
   * Define la forma en que está almacenado el nombre dentro de los campos primerNombre, segundoNombre, primerApellido, segundoApellido
   * @return tipoNombre
  **/
  @Schema(example = "1", required = true, description = "Define la forma en que está almacenado el nombre dentro de los campos primerNombre, segundoNombre, primerApellido, segundoApellido")
  public TipoNombreEnum getTipoNombre() {
    return tipoNombre;
  }

  public void setTipoNombre(TipoNombreEnum tipoNombre) {
    this.tipoNombre = tipoNombre;
  }

  public ResponseNombreCompletoVO mensaje(String mensaje) {
    this.mensaje = mensaje;
    return this;
  }

   /**
   * Respuesta de obtención de nombre.
   * @return mensaje
  **/
  @Schema(example = "Nombre obtenido satisfactoriamente", required = true, description = "Respuesta de obtención de nombre.")
  public String getMensaje() {
    return mensaje;
  }

  public void setMensaje(String mensaje) {
    this.mensaje = mensaje;
  }

  public ResponseNombreCompletoVO fechaConsulta(String fechaConsulta) {
    this.fechaConsulta = fechaConsulta;
    return this;
  }

   /**
   * Get fechaConsulta
   * @return fechaConsulta
  **/
  @Schema(required = true, description = "")
  public String getFechaConsulta() {
    return fechaConsulta;
  }

  public void setFechaConsulta(String fechaConsulta) {
    this.fechaConsulta = fechaConsulta;
  }

  public ResponseNombreCompletoVO fuenteFallo(FuenteFalloEnum fuenteFallo) {
    this.fuenteFallo = fuenteFallo;
    return this;
  }

   /**
   * Define si la consulta falló o no cuando se fue a la fuente.
   * @return fuenteFallo
  **/
  @Schema(example = "NO", required = true, description = "Define si la consulta falló o no cuando se fue a la fuente.")
  public FuenteFalloEnum getFuenteFallo() {
    return fuenteFallo;
  }

  public void setFuenteFallo(FuenteFalloEnum fuenteFallo) {
    this.fuenteFallo = fuenteFallo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseNombreCompletoVO responseNombreCompletoVO = (ResponseNombreCompletoVO) o;
    return Objects.equals(this.nombrePersona, responseNombreCompletoVO.nombrePersona) &&
        Objects.equals(this.primerNombre, responseNombreCompletoVO.primerNombre) &&
        Objects.equals(this.segundoNombre, responseNombreCompletoVO.segundoNombre) &&
        Objects.equals(this.primerApellido, responseNombreCompletoVO.primerApellido) &&
        Objects.equals(this.segundoApellido, responseNombreCompletoVO.segundoApellido) &&
        Objects.equals(this.tipoNombre, responseNombreCompletoVO.tipoNombre) &&
        Objects.equals(this.mensaje, responseNombreCompletoVO.mensaje) &&
        Objects.equals(this.fechaConsulta, responseNombreCompletoVO.fechaConsulta) &&
        Objects.equals(this.fuenteFallo, responseNombreCompletoVO.fuenteFallo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nombrePersona, primerNombre, segundoNombre, primerApellido, segundoApellido, tipoNombre, mensaje, fechaConsulta, fuenteFallo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseNombreCompletoVO {\n");
    
    sb.append("    nombrePersona: ").append(toIndentedString(nombrePersona)).append("\n");
    sb.append("    primerNombre: ").append(toIndentedString(primerNombre)).append("\n");
    sb.append("    segundoNombre: ").append(toIndentedString(segundoNombre)).append("\n");
    sb.append("    primerApellido: ").append(toIndentedString(primerApellido)).append("\n");
    sb.append("    segundoApellido: ").append(toIndentedString(segundoApellido)).append("\n");
    sb.append("    tipoNombre: ").append(toIndentedString(tipoNombre)).append("\n");
    sb.append("    mensaje: ").append(toIndentedString(mensaje)).append("\n");
    sb.append("    fechaConsulta: ").append(toIndentedString(fechaConsulta)).append("\n");
    sb.append("    fuenteFallo: ").append(toIndentedString(fuenteFallo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
