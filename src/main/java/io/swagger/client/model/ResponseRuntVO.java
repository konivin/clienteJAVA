/*
 * API Konivin
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.PersonaVO;
import io.swagger.client.model.ResponseRuntVOCertificadosAptitudConduccion;
import io.swagger.client.model.ResponseRuntVOLicenciasConduccion;
import io.swagger.client.model.ResponseRuntVOSolicitudesConductor;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * Colombia -  23566548 - Consulta de información de conductor ante el RUNT.
 */
@Schema(description = "Colombia -  23566548 - Consulta de información de conductor ante el RUNT.")
@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2025-07-01T20:01:52.954733595Z[GMT]")

public class ResponseRuntVO {
  @SerializedName("personaVO")
  private PersonaVO personaVO = null;

  @SerializedName("nroInscripcion")
  private String nroInscripcion = null;

  @SerializedName("fechaInscripcion")
  private String fechaInscripcion = null;

  @SerializedName("estadoConductor")
  private String estadoConductor = null;

  @SerializedName("estadoPersona")
  private String estadoPersona = null;

  /**
   * Indica si la persona tiene multas de tránsito.
   */
  @JsonAdapter(TieneMultasEnum.Adapter.class)
  public enum TieneMultasEnum {
    @SerializedName("SI")
    SI("SI"),
    @SerializedName("NO")
    NO("NO");

    private String value;

    TieneMultasEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TieneMultasEnum fromValue(String input) {
      for (TieneMultasEnum b : TieneMultasEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TieneMultasEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TieneMultasEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public TieneMultasEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return TieneMultasEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("tieneMultas")
  private TieneMultasEnum tieneMultas = null;

  @SerializedName("nroPazYSalvo")
  private String nroPazYSalvo = null;

  @SerializedName("licenciasConduccion")
  private List<ResponseRuntVOLicenciasConduccion> licenciasConduccion = new ArrayList<ResponseRuntVOLicenciasConduccion>();

  @SerializedName("certificadosAptitudConduccion")
  private List<ResponseRuntVOCertificadosAptitudConduccion> certificadosAptitudConduccion = new ArrayList<ResponseRuntVOCertificadosAptitudConduccion>();

  @SerializedName("solicitudesConductor")
  private List<ResponseRuntVOSolicitudesConductor> solicitudesConductor = new ArrayList<ResponseRuntVOSolicitudesConductor>();

  @SerializedName("fechaConsulta")
  private String fechaConsulta = null;

  /**
   * Indica si la fuente falló en la consulta.
   */
  @JsonAdapter(FuenteFalloEnum.Adapter.class)
  public enum FuenteFalloEnum {
    @SerializedName("SI")
    SI("SI"),
    @SerializedName("NO")
    NO("NO");

    private String value;

    FuenteFalloEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static FuenteFalloEnum fromValue(String input) {
      for (FuenteFalloEnum b : FuenteFalloEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<FuenteFalloEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FuenteFalloEnum enumeration) throws IOException {
        jsonWriter.value(String.valueOf(enumeration.getValue()));
      }

      @Override
      public FuenteFalloEnum read(final JsonReader jsonReader) throws IOException {
        Object value = jsonReader.nextString();
        return FuenteFalloEnum.fromValue((String)(value));
      }
    }
  }  @SerializedName("fuenteFallo")
  private FuenteFalloEnum fuenteFallo = null;

  public ResponseRuntVO personaVO(PersonaVO personaVO) {
    this.personaVO = personaVO;
    return this;
  }

   /**
   * Get personaVO
   * @return personaVO
  **/
  @Schema(required = true, description = "")
  public PersonaVO getPersonaVO() {
    return personaVO;
  }

  public void setPersonaVO(PersonaVO personaVO) {
    this.personaVO = personaVO;
  }

  public ResponseRuntVO nroInscripcion(String nroInscripcion) {
    this.nroInscripcion = nroInscripcion;
    return this;
  }

   /**
   * Número de inscripción del conductor en el RUNT.
   * @return nroInscripcion
  **/
  @Schema(example = "14975686", required = true, description = "Número de inscripción del conductor en el RUNT.")
  public String getNroInscripcion() {
    return nroInscripcion;
  }

  public void setNroInscripcion(String nroInscripcion) {
    this.nroInscripcion = nroInscripcion;
  }

  public ResponseRuntVO fechaInscripcion(String fechaInscripcion) {
    this.fechaInscripcion = fechaInscripcion;
    return this;
  }

   /**
   * Get fechaInscripcion
   * @return fechaInscripcion
  **/
  @Schema(required = true, description = "")
  public String getFechaInscripcion() {
    return fechaInscripcion;
  }

  public void setFechaInscripcion(String fechaInscripcion) {
    this.fechaInscripcion = fechaInscripcion;
  }

  public ResponseRuntVO estadoConductor(String estadoConductor) {
    this.estadoConductor = estadoConductor;
    return this;
  }

   /**
   * Estado actual del conductor en el RUNT.
   * @return estadoConductor
  **/
  @Schema(example = "ACTIVO", required = true, description = "Estado actual del conductor en el RUNT.")
  public String getEstadoConductor() {
    return estadoConductor;
  }

  public void setEstadoConductor(String estadoConductor) {
    this.estadoConductor = estadoConductor;
  }

  public ResponseRuntVO estadoPersona(String estadoPersona) {
    this.estadoPersona = estadoPersona;
    return this;
  }

   /**
   * Estado general de la persona en el RUNT.
   * @return estadoPersona
  **/
  @Schema(example = "ACTIVA", required = true, description = "Estado general de la persona en el RUNT.")
  public String getEstadoPersona() {
    return estadoPersona;
  }

  public void setEstadoPersona(String estadoPersona) {
    this.estadoPersona = estadoPersona;
  }

  public ResponseRuntVO tieneMultas(TieneMultasEnum tieneMultas) {
    this.tieneMultas = tieneMultas;
    return this;
  }

   /**
   * Indica si la persona tiene multas de tránsito.
   * @return tieneMultas
  **/
  @Schema(example = "SI", required = true, description = "Indica si la persona tiene multas de tránsito.")
  public TieneMultasEnum getTieneMultas() {
    return tieneMultas;
  }

  public void setTieneMultas(TieneMultasEnum tieneMultas) {
    this.tieneMultas = tieneMultas;
  }

  public ResponseRuntVO nroPazYSalvo(String nroPazYSalvo) {
    this.nroPazYSalvo = nroPazYSalvo;
    return this;
  }

   /**
   * Número de Paz y Salvo, si aplica. Vacío si no lo tiene.
   * @return nroPazYSalvo
  **/
  @Schema(required = true, description = "Número de Paz y Salvo, si aplica. Vacío si no lo tiene.")
  public String getNroPazYSalvo() {
    return nroPazYSalvo;
  }

  public void setNroPazYSalvo(String nroPazYSalvo) {
    this.nroPazYSalvo = nroPazYSalvo;
  }

  public ResponseRuntVO licenciasConduccion(List<ResponseRuntVOLicenciasConduccion> licenciasConduccion) {
    this.licenciasConduccion = licenciasConduccion;
    return this;
  }

  public ResponseRuntVO addLicenciasConduccionItem(ResponseRuntVOLicenciasConduccion licenciasConduccionItem) {
    this.licenciasConduccion.add(licenciasConduccionItem);
    return this;
  }

   /**
   * Listado de licencias de conducción de la persona.
   * @return licenciasConduccion
  **/
  @Schema(required = true, description = "Listado de licencias de conducción de la persona.")
  public List<ResponseRuntVOLicenciasConduccion> getLicenciasConduccion() {
    return licenciasConduccion;
  }

  public void setLicenciasConduccion(List<ResponseRuntVOLicenciasConduccion> licenciasConduccion) {
    this.licenciasConduccion = licenciasConduccion;
  }

  public ResponseRuntVO certificadosAptitudConduccion(List<ResponseRuntVOCertificadosAptitudConduccion> certificadosAptitudConduccion) {
    this.certificadosAptitudConduccion = certificadosAptitudConduccion;
    return this;
  }

  public ResponseRuntVO addCertificadosAptitudConduccionItem(ResponseRuntVOCertificadosAptitudConduccion certificadosAptitudConduccionItem) {
    this.certificadosAptitudConduccion.add(certificadosAptitudConduccionItem);
    return this;
  }

   /**
   * Listado de certificados de aptitud en conducción.
   * @return certificadosAptitudConduccion
  **/
  @Schema(required = true, description = "Listado de certificados de aptitud en conducción.")
  public List<ResponseRuntVOCertificadosAptitudConduccion> getCertificadosAptitudConduccion() {
    return certificadosAptitudConduccion;
  }

  public void setCertificadosAptitudConduccion(List<ResponseRuntVOCertificadosAptitudConduccion> certificadosAptitudConduccion) {
    this.certificadosAptitudConduccion = certificadosAptitudConduccion;
  }

  public ResponseRuntVO solicitudesConductor(List<ResponseRuntVOSolicitudesConductor> solicitudesConductor) {
    this.solicitudesConductor = solicitudesConductor;
    return this;
  }

  public ResponseRuntVO addSolicitudesConductorItem(ResponseRuntVOSolicitudesConductor solicitudesConductorItem) {
    this.solicitudesConductor.add(solicitudesConductorItem);
    return this;
  }

   /**
   * Listado de solicitudes realizadas por el conductor.
   * @return solicitudesConductor
  **/
  @Schema(required = true, description = "Listado de solicitudes realizadas por el conductor.")
  public List<ResponseRuntVOSolicitudesConductor> getSolicitudesConductor() {
    return solicitudesConductor;
  }

  public void setSolicitudesConductor(List<ResponseRuntVOSolicitudesConductor> solicitudesConductor) {
    this.solicitudesConductor = solicitudesConductor;
  }

  public ResponseRuntVO fechaConsulta(String fechaConsulta) {
    this.fechaConsulta = fechaConsulta;
    return this;
  }

   /**
   * Get fechaConsulta
   * @return fechaConsulta
  **/
  @Schema(required = true, description = "")
  public String getFechaConsulta() {
    return fechaConsulta;
  }

  public void setFechaConsulta(String fechaConsulta) {
    this.fechaConsulta = fechaConsulta;
  }

  public ResponseRuntVO fuenteFallo(FuenteFalloEnum fuenteFallo) {
    this.fuenteFallo = fuenteFallo;
    return this;
  }

   /**
   * Indica si la fuente falló en la consulta.
   * @return fuenteFallo
  **/
  @Schema(example = "NO", required = true, description = "Indica si la fuente falló en la consulta.")
  public FuenteFalloEnum getFuenteFallo() {
    return fuenteFallo;
  }

  public void setFuenteFallo(FuenteFalloEnum fuenteFallo) {
    this.fuenteFallo = fuenteFallo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseRuntVO responseRuntVO = (ResponseRuntVO) o;
    return Objects.equals(this.personaVO, responseRuntVO.personaVO) &&
        Objects.equals(this.nroInscripcion, responseRuntVO.nroInscripcion) &&
        Objects.equals(this.fechaInscripcion, responseRuntVO.fechaInscripcion) &&
        Objects.equals(this.estadoConductor, responseRuntVO.estadoConductor) &&
        Objects.equals(this.estadoPersona, responseRuntVO.estadoPersona) &&
        Objects.equals(this.tieneMultas, responseRuntVO.tieneMultas) &&
        Objects.equals(this.nroPazYSalvo, responseRuntVO.nroPazYSalvo) &&
        Objects.equals(this.licenciasConduccion, responseRuntVO.licenciasConduccion) &&
        Objects.equals(this.certificadosAptitudConduccion, responseRuntVO.certificadosAptitudConduccion) &&
        Objects.equals(this.solicitudesConductor, responseRuntVO.solicitudesConductor) &&
        Objects.equals(this.fechaConsulta, responseRuntVO.fechaConsulta) &&
        Objects.equals(this.fuenteFallo, responseRuntVO.fuenteFallo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(personaVO, nroInscripcion, fechaInscripcion, estadoConductor, estadoPersona, tieneMultas, nroPazYSalvo, licenciasConduccion, certificadosAptitudConduccion, solicitudesConductor, fechaConsulta, fuenteFallo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseRuntVO {\n");
    
    sb.append("    personaVO: ").append(toIndentedString(personaVO)).append("\n");
    sb.append("    nroInscripcion: ").append(toIndentedString(nroInscripcion)).append("\n");
    sb.append("    fechaInscripcion: ").append(toIndentedString(fechaInscripcion)).append("\n");
    sb.append("    estadoConductor: ").append(toIndentedString(estadoConductor)).append("\n");
    sb.append("    estadoPersona: ").append(toIndentedString(estadoPersona)).append("\n");
    sb.append("    tieneMultas: ").append(toIndentedString(tieneMultas)).append("\n");
    sb.append("    nroPazYSalvo: ").append(toIndentedString(nroPazYSalvo)).append("\n");
    sb.append("    licenciasConduccion: ").append(toIndentedString(licenciasConduccion)).append("\n");
    sb.append("    certificadosAptitudConduccion: ").append(toIndentedString(certificadosAptitudConduccion)).append("\n");
    sb.append("    solicitudesConductor: ").append(toIndentedString(solicitudesConductor)).append("\n");
    sb.append("    fechaConsulta: ").append(toIndentedString(fechaConsulta)).append("\n");
    sb.append("    fuenteFallo: ").append(toIndentedString(fuenteFallo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
